CmdCommand subclass: #SycAddNewClassTagCommand	instanceVariableNames: 'package tagName'	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycAddNewClassTagCommand commentStamp: '' prior: 0!I am a command to add new class tag into the package. Internal Representation and Key Implementation Points.    Instance Variables	package:		<Package>	tagName:		<String>!!SycAddNewClassTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.631088+00:00'!applyResultInContext: aToolContext	super applyResultInContext: aToolContext.	aToolContext showPackage: package tag: tagName! !!SycAddNewClassTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.631667+00:00'!execute	package ensureTag: tagName! !!SycAddNewClassTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.632959+00:00'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	package := aToolContext lastSelectedPackage.	tagName := self morphicUIManager		request: ('New class tag in ' , package name)		initialAnswer: ''		title: 'Create a new class tag'.	tagName isEmptyOrNil ifTrue: [ CmdCommandAborted signal ]! !!SycAddNewClassTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.631313+00:00'!defaultMenuIconName	^#add! !!SycAddNewClassTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.631488+00:00'!defaultMenuItemName	^'New tag'! !!SycAddNewClassTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.63182+00:00'!package	^ package! !!SycAddNewClassTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.632205+00:00'!package: anObject	package := anObject! !!SycAddNewClassTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.633143+00:00'!tagName	^ tagName! !!SycAddNewClassTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.633494+00:00'!tagName: anObject	tagName := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycAddNewClassTagCommand class	instanceVariableNames: ''!!SycAddNewClassTagCommand class commentStamp: '' prior: 0!I am a command to add new class tag into the package. Internal Representation and Key Implementation Points.    Instance Variables	package:		<Package>	tagName:		<String>!!SycAddNewClassTagCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.630654+00:00'!canBeExecutedInContext: aToolContext	^aToolContext isPackageSelected! !!SycAddNewClassTagCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.024999+00:00'!fullBrowserClassGroupMenuActivation	<classAnnotation>	^CmdContextMenuActivation byRootGroupItemFor: ClyFullBrowserClassGroupContext! !!SycAddNewClassTagCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.025238+00:00'!fullBrowserPackageMenuActivation	<classAnnotation>	^CmdContextMenuActivation byRootGroupItemFor: ClyFullBrowserPackageContext! !CmdCommand subclass: #SycInspectPackageCommand	instanceVariableNames: 'package'	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycInspectPackageCommand commentStamp: '' prior: 0!I am a command to inspect given package.Internal Representation and Key Implementation Points.Instance Variablespackage:		<Package>!!SycInspectPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.648463+00:00'!defaultMenuIconName	^ #inspect! !!SycInspectPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.648613+00:00'!defaultMenuItemName	^'Inspect'! !!SycInspectPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.648737+00:00'!description	^ 'Inspect package'! !!SycInspectPackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.649155+00:00'!execute	(Smalltalk tools toolNamed: #inspector) openOn: package! !!SycInspectPackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.649382+00:00'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	package := aToolContext lastSelectedPackage! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycInspectPackageCommand class	instanceVariableNames: ''!!SycInspectPackageCommand class commentStamp: '' prior: 0!I am a command to inspect given package.Internal Representation and Key Implementation Points.Instance Variablespackage:		<Package>!!SycInspectPackageCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.647955+00:00'!canBeExecutedInContext: aToolContext	^aToolContext isPackageSelected! !!SycInspectPackageCommand class methodsFor: 'activation' stamp: '2025-07-02T08:24:05.648255+00:00'!fullBrowserMenuActivation	<classAnnotation>	^ CmdContextMenuActivation		  byItemOf: CmdExtraMenuGroup		  for: Package asCalypsoItemContext! !CmdCommand subclass: #SycAddNewPackageCommand	instanceVariableNames: 'systemEnvironment packageName resultPackage'	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycAddNewPackageCommand commentStamp: '' prior: 0!I am a command to add new package into the system.I should be created on particular system environment which allow create packages: 	resultPackage := systemEnvironment createPackageNamed: packageName	Currently only Calypso provide such compatible environment (ClySystemEnvironment)	 Internal Representation and Key Implementation Points.    Instance Variables	packageName:		<String>	resultPackage:		<Package>	systemEnvironment:		<Object>!!SycAddNewPackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.63394+00:00'!applyResultInContext: aToolContext	super applyResultInContext: aToolContext.	aToolContext showPackage: resultPackage! !!SycAddNewPackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.635239+00:00'!execute	resultPackage := [ systemEnvironment createPackageNamed: packageName ]		                 on: PackageConflictError		                 do: [ systemEnvironment packageNamed: packageName ]! !!SycAddNewPackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.643606+00:00'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	systemEnvironment := aToolContext systemEnvironment.	packageName := ''.	aToolContext isPackageSelected ifTrue: [		packageName := aToolContext lastSelectedPackage name].	packageName := self morphicUIManager		request: 'Name of the new package:' initialAnswer: packageName title: 'Create a new package'.	packageName isEmptyOrNil ifTrue: [ ^CmdCommandAborted signal]! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.634121+00:00'!defaultMenuIconName	^#add! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.634254+00:00'!defaultMenuItemName	^'New package'! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.634375+00:00'!description	^ 'Adds a new package into the system.'! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.642309+00:00'!packageName	^ packageName! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.642732+00:00'!packageName: anObject	packageName := anObject! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.643841+00:00'!resultPackage	^ resultPackage! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.644005+00:00'!resultPackage: anObject	resultPackage := anObject! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.644138+00:00'!systemEnvironment	^ systemEnvironment! !!SycAddNewPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.644283+00:00'!systemEnvironment: anObject	systemEnvironment := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycAddNewPackageCommand class	instanceVariableNames: ''!!SycAddNewPackageCommand class commentStamp: '' prior: 0!I am a command to add new package into the system.I should be created on particular system environment which allow create packages: 	resultPackage := systemEnvironment createPackageNamed: packageName	Currently only Calypso provide such compatible environment (ClySystemEnvironment)	 Internal Representation and Key Implementation Points.    Instance Variables	packageName:		<String>	resultPackage:		<Package>	systemEnvironment:		<Object>!!SycAddNewPackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.090792+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byRootGroupItemFor: ClyFullBrowserPackageContext! !!SycAddNewPackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.091057+00:00'!fullBrowserShortcutActivation	<classAnnotation>	^CmdShortcutActivation by: $k meta, $p meta for: ClyFullBrowserGlobalContext! !CmdCommand subclass: #SycPackageCommand	instanceVariableNames: 'packages'	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycPackageCommand commentStamp: '' prior: 0!I am a base class for commands which perform operations with given packages.Internal Representation and Key Implementation Points.    Instance Variables	packages:		<Collection of<Package>>!!SycPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.651662+00:00'!packages	^ packages! !!SycPackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.65206+00:00'!packages: anObject	packages := anObject! !!SycPackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.652289+00:00'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	packages := aToolContext selectedPackages! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycPackageCommand class	instanceVariableNames: ''!!SycPackageCommand class commentStamp: '' prior: 0!I am a base class for commands which perform operations with given packages.Internal Representation and Key Implementation Points.    Instance Variables	packages:		<Collection of<Package>>!!SycPackageCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.651084+00:00'!canBeExecutedInContext: aToolContext	^aToolContext isPackageSelected! !!SycPackageCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.651286+00:00'!isAbstract	^self = SycPackageCommand! !SycPackageCommand subclass: #SycRecompilePackageCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycRecompilePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.652441+00:00'!defaultMenuItemName	^'Recompile'! !!SycRecompilePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.652952+00:00'!execute	packages		do: [ :eachPackage |			eachPackage methods do: [ :eachMethod | eachMethod recompile ] ]		displayingProgress: [:eachPackage | 'Recompiling ', eachPackage name]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycRecompilePackageCommand class	instanceVariableNames: ''!!SycRecompilePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.075251+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byItemOf: CmdExtraMenuGroup for: Package asCalypsoItemContext! !SycPackageCommand subclass: #SycRemovePackageCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycRemovePackageCommand commentStamp: '' prior: 0!I am a command to remove given packages!!SycRemovePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.653658+00:00'!applyResultInContext: aToolContext	"Update the browser's title and method editor  after removal of a package"	| browserTool |		super applyResultInContext: aToolContext.	browserTool := aToolContext tool.	aToolContext tool navigationEnvironment: ClyNavigationEnvironment currentImage.	browserTool 		updateWindowTitle;		updateMethodEditorAfterPackageRemoval.	! !!SycRemovePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.654652+00:00'!execute	self packages do: [ :each | each removeFromSystem ].	self packages: OrderedCollection new.! !!SycRemovePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.655892+00:00'!prepareFullExecutionInContext: aToolContext	| packagesWithClasses names answer |	super prepareFullExecutionInContext: aToolContext.	packagesWithClasses := packages reject: [ :each | each isEmpty].	packagesWithClasses ifNotEmpty: [		names := (packagesWithClasses collect: [:package | package name ]) joinUsing: ', '.		answer := self morphicUIManager confirm: (			'Are you sure you want to delete the selection(s)?', String cr, names, ' still contains classes.').		answer ifFalse: [ CmdCommandAborted signal ]]! !!SycRemovePackageCommand methodsFor: 'accessing' stamp: '2025-07-04T10:10:04.862974+02:00'!defaultMenuIconName	^ #remove! !!SycRemovePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.653979+00:00'!defaultMenuItemName	^'Remove'! !!SycRemovePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.6541+00:00'!description	^ 'Removes Packages.'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycRemovePackageCommand class	instanceVariableNames: ''!!SycRemovePackageCommand class commentStamp: '' prior: 0!I am a command to remove given packages!!SycRemovePackageCommand class methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.653118+00:00'!defaultMenuIconName	^ #delete! !!SycRemovePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.019184+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byRootGroupItemOrder: 10000 for: ClyFullBrowserPackageContext! !!SycRemovePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.019463+00:00'!fullBrowserShortcutActivation	<classAnnotation>	^CmdShortcutActivation removalFor: ClyFullBrowserPackageContext! !CmdCommand subclass: #SycPromotePackageFromTagCommand	instanceVariableNames: 'package classTag'	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycPromotePackageFromTagCommand commentStamp: '' prior: 0!I am a command to promote given package and tag to be separate package.Internal Representation and Key Implementation Points.    Instance Variables	classTag:		<Symbol>	package:		<Package>!!SycPromotePackageFromTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.656607+00:00'!applyResultInContext: aBrowserContext	| newPackage |	newPackage := (package name, '-', classTag) asPackage.	aBrowserContext showPackage: newPackage! !!SycPromotePackageFromTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.656968+00:00'!execute	(package tagNamed: classTag) promoteAsPackage! !!SycPromotePackageFromTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.657236+00:00'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	package := aToolContext lastSelectedPackage.	classTag := aToolContext lastSelectedPackageTag! !!SycPromotePackageFromTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.656772+00:00'!defaultMenuItemName	^'Promote as package'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycPromotePackageFromTagCommand class	instanceVariableNames: ''!!SycPromotePackageFromTagCommand class commentStamp: '' prior: 0!I am a command to promote given package and tag to be separate package.Internal Representation and Key Implementation Points.    Instance Variables	classTag:		<Symbol>	package:		<Package>!!SycPromotePackageFromTagCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.656252+00:00'!canBeExecutedInContext: aToolContext	^aToolContext isPackageSelected and: [aToolContext isPackageTagSelected]! !!SycPromotePackageFromTagCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.091559+00:00'!foo: ag bar: ab	<classAnnotation>	^CmdContextMenuActivation byItemOf: CmdExtraMenuGroup for: ClyTaggedClassGroup asCalypsoItemContext! !!SycPromotePackageFromTagCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.091809+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byItemOf: CmdExtraMenuGroup for: ClyTaggedClassGroup asCalypsoItemContext! !SycPackageCommand subclass: #SycFileOutPackageCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycFileOutPackageCommand commentStamp: '2025-07-04T10:07:52.080606+02:00' prior: 0!Requests to save a textual version of the selected class to a new file in chunk format and .st extension. Instance and class side methods are both saved!!SycFileOutPackageCommand methodsFor: 'accessing' stamp: '2025-07-04T10:08:18.514974+02:00'!defaultMenuItemName	^ 'File out'! !!SycFileOutPackageCommand methodsFor: 'accessing' stamp: '2025-07-04T10:10:12.552187+02:00'!defaultMenuIconName	^ #save! !!SycFileOutPackageCommand methodsFor: 'execution' stamp: '2025-07-04T10:09:10.890915+02:00'!execute	packages do: [ :each | each fileOut ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycFileOutPackageCommand class	instanceVariableNames: ''!!SycFileOutPackageCommand class commentStamp: '2025-07-04T10:07:52.080606+02:00' prior: 0!Requests to save a textual version of the selected class to a new file in chunk format and .st extension. Instance and class side methods are both saved!!SycFileOutPackageCommand class methodsFor: 'activation' stamp: '2025-07-04T10:09:18.683978+02:00'!fullBrowserMenuActivation	<classAnnotation>	^ CmdContextMenuActivation		  byItemOf: CmdExtraMenuGroup		  for: Package asCalypsoItemContext! !SycPackageCommand subclass: #SycDemoteToPackageWithTagCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycDemoteToPackageWithTagCommand commentStamp: '' prior: 0!I am a command to demote given packages into the package with tag!!SycDemoteToPackageWithTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.650211+00:00'!applyResultInContext: aBrowserContext	| lastPackage newPackage tag |	lastPackage := packages detect: [ :each | each name includes: $- ] ifNone: [ ^self ].	newPackage := (lastPackage name copyUpToLast: $-) asPackage.	tag := lastPackage name last: lastPackage name size - newPackage name size - 1.	aBrowserContext showPackage: newPackage tag: tag asSymbol! !!SycDemoteToPackageWithTagCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.650873+00:00'!execute	packages		select: [ :package | package name includes: $- ]		thenDo: [ :package | package demoteToTagInPackage ]! !!SycDemoteToPackageWithTagCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.650449+00:00'!defaultMenuItemName	^'Demote to package with tag'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycDemoteToPackageWithTagCommand class	instanceVariableNames: ''!!SycDemoteToPackageWithTagCommand class commentStamp: '' prior: 0!I am a command to demote given packages into the package with tag!!SycDemoteToPackageWithTagCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.020748+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byItemOf: CmdExtraMenuGroup for: Package asCalypsoItemContext! !CmdCommand subclass: #SycRenamePackageCommand	instanceVariableNames: 'package newName'	classVariableNames: ''	package: 'SystemCommands-PackageCommands'!!SycRenamePackageCommand commentStamp: '' prior: 0!I am a command to rename given package. Internal Representation and Key Implementation Points.    Instance Variables	newName:		<String>	package:		<Package>!!SycRenamePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.657585+00:00'!defaultMenuIconName	^ #edit! !!SycRenamePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.65772+00:00'!defaultMenuItemName	^'Rename'! !!SycRenamePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.657843+00:00'!description	^ 'Rename package'! !!SycRenamePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.658277+00:00'!execute	(RBRenamePackageRefactoring rename: package name to: newName) execute! !!SycRenamePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.658784+00:00'!prepareFullExecutionInContext: aToolContext	super prepareFullExecutionInContext: aToolContext.	package := aToolContext lastSelectedPackage.	newName := self morphicUIManager		request: 'New name of the package'		initialAnswer: package name		title: 'Rename a package'.	newName isEmptyOrNil | (newName = package name) ifTrue: [ ^ CmdCommandAborted signal ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycRenamePackageCommand class	instanceVariableNames: ''!!SycRenamePackageCommand class commentStamp: '' prior: 0!I am a command to rename given package. Internal Representation and Key Implementation Points.    Instance Variables	newName:		<String>	package:		<Package>!!SycRenamePackageCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.657436+00:00'!canBeExecutedInContext: aToolContext	^aToolContext isPackageSelected! !!SycRenamePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.069135+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byRootGroupItemOrder: 1 for: ClyFullBrowserPackageContext! !!SycRenamePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.069354+00:00'!fullBrowserShortcutActivation	<classAnnotation>	^CmdShortcutActivation renamingFor: ClyFullBrowserPackageContext! !CmdCommand subclass: #SycAddPackagesScopeCommand	instanceVariableNames: 'packages'	classVariableNames: ''	package: 'SystemCommands-PackageCommands-Scope'!!SycAddPackagesScopeCommand commentStamp: '' prior: 0!I am a command to add packages scope to listScopes!!SycAddPackagesScopeCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.644422+00:00'!defaultMenuIconName	^ #smallPushpin! !!SycAddPackagesScopeCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.64457+00:00'!defaultMenuItemName	^ 'Create scope from selected package(s)'! !!SycAddPackagesScopeCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.645325+00:00'!packages	^ packages! !!SycAddPackagesScopeCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.645706+00:00'!packages: anObject	packages := anObject! !!SycAddPackagesScopeCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.645144+00:00'!execute	| scope |		scope := ScopesManager newScopeFrom: packages.	ScopesManager addScope: scope.	ScopesPresenter openSelecting: scope! !!SycAddPackagesScopeCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.646089+00:00'!prepareFullExecutionInContext: aBrowserContext	super prepareFullExecutionInContext: aBrowserContext.	packages := aBrowserContext selectedPackageItems collect: [:e | e actualObject ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycAddPackagesScopeCommand class	instanceVariableNames: ''!!SycAddPackagesScopeCommand class commentStamp: '' prior: 0!I am a command to add packages scope to listScopes!!SycAddPackagesScopeCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.090574+00:00'!fullBrowserMenuActivation	<classAnnotation>	^ CmdContextMenuActivation byRootGroupItemFor: ClyFullBrowserPackageContext! !CmdCommand subclass: #SycDuplicatePackageCommand	instanceVariableNames: ''	classVariableNames: ''	package: 'SystemCommands-PackageCommands-Scope'!!SycDuplicatePackageCommand commentStamp: '' prior: 0!I am a command to copy given package. Internal Representation and Key Implementation Points.    Instance Variables	newName:		<String>	package:		<Package>!!SycDuplicatePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.646493+00:00'!defaultMenuIconName	^#smallCopy! !!SycDuplicatePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.646638+00:00'!defaultMenuItemName	^'Duplicate package'! !!SycDuplicatePackageCommand methodsFor: 'accessing' stamp: '2025-07-02T08:24:05.646759+00:00'!description	^ 'Copy a given package.'! !!SycDuplicatePackageCommand methodsFor: 'execution' stamp: '2025-07-02T08:24:05.647712+00:00'!prepareFullExecutionInContext: aToolContext	| dialog package newName |	super prepareFullExecutionInContext: aToolContext.	package := aToolContext lastSelectedPackage.	newName := self morphicUIManager		request: 'New name of copied package'		initialAnswer: package name		title: 'Copy package'.	newName isEmptyOrNil | (newName = package name) ifTrue: [ ^ CmdCommandAborted signal ].	dialog := SycCopyClassUsingPatternPresenter openOn: package -> newName.	dialog cancelled ifTrue: [ ^ CmdCommandAborted signal ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SycDuplicatePackageCommand class	instanceVariableNames: ''!!SycDuplicatePackageCommand class commentStamp: '' prior: 0!I am a command to copy given package. Internal Representation and Key Implementation Points.    Instance Variables	newName:		<String>	package:		<Package>!!SycDuplicatePackageCommand class methodsFor: 'testing' stamp: '2025-07-02T08:24:05.64632+00:00'!canBeExecutedInContext: aToolContext	^ aToolContext isPackageSelected! !!SycDuplicatePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.090099+00:00'!fullBrowserMenuActivation	<classAnnotation>	^CmdContextMenuActivation byRootGroupItemOrder: 1.1 for: ClyFullBrowserPackageContext! !!SycDuplicatePackageCommand class methodsFor: '*Calypso-SystemTools-FullBrowser' stamp: '2025-07-02T08:24:11.090352+00:00'!fullBrowserShortcutActivation	<classAnnotation>	^CmdShortcutActivation by: $c meta for: ClyFullBrowserPackageContext! !